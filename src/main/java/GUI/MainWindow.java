/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Entity.GPS;
import Entity.Parcel;
import Entity.Property;
import QuadStrom.Node;
import QuadStrom.QuadTree;
import QuadStrom.QuadTreeObject;
import base.Generator;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.util.ArrayList;

/**
 *
 * @author Mato
 */
public class MainWindow<T extends QuadTreeObject> extends javax.swing.JFrame {

    private Graphics2D g2dParcel;
    private Graphics2D g2dProperty;
    private QuadTree<Parcel> quadTreeParcel;
    private QuadTree<Property> quadTreeProperty;
    Generator<Parcel> generatorParcel;
    Generator<Property> generatorProperty;

    DefaultListModel<QuadTreeObject> listModel = new DefaultListModel<>();

    public MainWindow(QuadTree<Parcel> qd1, Generator<Parcel> g1, QuadTree<Property> qd2, Generator<Property> g2) {
        initComponents();
        this.g2dParcel = (Graphics2D) drawingPanel.getGraphics();
        this.g2dProperty = (Graphics2D) drawingPanel2.getGraphics();
        this.quadTreeParcel = qd1;
        this.generatorParcel = g1;
        this.quadTreeProperty = qd2;
        this.generatorProperty = g2;
    }

    public void drawQuadTreeParcel(){
        drawingPanel.removeAll();
        ArrayList<Node<Parcel>> listOfTreeNodes = quadTreeParcel.getAllNodesOfTree();
        GuiComponent cmp;
        for(Node<Parcel> node : listOfTreeNodes) {
            cmp = new GuiComponent((int)node.getX1(), (int)node.getY1(), (int)node.getX2(), (int)node.getY2(),this.g2dParcel, Color.BLACK, "");
            this.drawingPanel.add(cmp);
            for(Parcel object : node.getList()) {
                cmp = new GuiComponent((int)object.getPosition1().getX(), (int)object.getPosition1().getY(), (int)object.getPosition2().getX(), (int)object.getPosition2().getY(),
                        this.g2dParcel, Color.GREEN, String.valueOf(object.getId()));
                this.drawingPanel.add(cmp);
            }
        }
        drawingPanel.paintAll(g2dParcel);
        logArea.setText("");
        for (String string : quadTreeParcel.checkTree()) {
            logArea.append(string + "\n");
        }
    }

    public void drawQuadTreeProperty(){
        drawingPanel2.removeAll();
        ArrayList<Node<Property>> listOfTreeNodes = quadTreeProperty.getAllNodesOfTree();
        GuiComponent cmp;
        for(Node<Property> node : listOfTreeNodes) {
            cmp = new GuiComponent((int)node.getX1(), (int)node.getY1(), (int)node.getX2(), (int)node.getY2(),this.g2dProperty, Color.BLACK, "");
            this.drawingPanel2.add(cmp);
            for(Property object : node.getList()) {
                cmp = new GuiComponent((int)object.getPosition1().getX(), (int)object.getPosition1().getY(), (int)object.getPosition2().getX(), (int)object.getPosition2().getY(),
                        this.g2dProperty, Color.GREEN, String.valueOf(object.getId()));
                this.drawingPanel2.add(cmp);
            }
        }
        drawingPanel2.paintAll(g2dProperty);
        logArea.setText("");
        for (String string : quadTreeProperty.checkTree()) {
            logArea.append(string + "\n");
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawingPanel = new javax.swing.JPanel();
        objectPanel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        gps1Label = new javax.swing.JLabel();
        gps2Label = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionText = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        gps1Text1 = new javax.swing.JTextField();
        gps1Text2 = new javax.swing.JTextField();
        gps1Text3 = new javax.swing.JTextField();
        gps1Text4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        gps2Text1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        gps2Text2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        gps2Text3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        gps2Text4 = new javax.swing.JTextField();
        propertyCheckBox = new javax.swing.JCheckBox();
        parcelCheckBox = new javax.swing.JCheckBox();
        findButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        redrawButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        objectList = new javax.swing.JList<>();
        deleteAllButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        randomButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        heightButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        optimizeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        drawingPanel2 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        drawingPanel.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout drawingPanelLayout = new javax.swing.GroupLayout(drawingPanel);
        drawingPanel.setLayout(drawingPanelLayout);
        drawingPanelLayout.setHorizontalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        drawingPanelLayout.setVerticalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        idLabel.setText("Súpisné číslo:");

        descriptionLabel.setText("Popis:");

        gps1Label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        gps1Label.setText("GPS1");

        gps2Label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        gps2Label.setText("GPS2");

        descriptionText.setColumns(20);
        descriptionText.setRows(5);
        jScrollPane1.setViewportView(descriptionText);

        jLabel1.setText("Šírka:");

        jLabel2.setText("Pozícia:");

        jLabel3.setText("Výška:");

        jLabel4.setText("Pozícia:");

        gps1Text1.setName(""); // NOI18N

        jLabel5.setText("Šírka:");

        jLabel6.setText("Pozícia:");

        jLabel7.setText("Výška:");

        jLabel8.setText("Pozícia:");

        propertyCheckBox.setText("Nehnutelnost");
        propertyCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                propertyCheckBoxItemStateChanged(evt);
            }
        });

        parcelCheckBox.setText("Parcela");
        parcelCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                parcelCheckBoxItemStateChanged(evt);
            }
        });

        findButton.setText("Nájdi");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        addButton.setText("Vloz");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Vymaz");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        redrawButton.setText("Prekres");
        redrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redrawButtonActionPerformed(evt);
            }
        });

        objectList.setModel(listModel);
        objectList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        objectList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                objectListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(objectList);

        deleteAllButton.setText("Vymaz Vsetko");
        deleteAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Generuj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        randomButton.setText("Random");
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        editButton.setText("Uprav");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        heightButton.setText("Zmen Vysku");
        heightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Uloz do Suboru");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Nacitaj zo Suboru");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        optimizeButton.setText("Optimalizuj");
        optimizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optimizeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout objectPanelLayout = new javax.swing.GroupLayout(objectPanel);
        objectPanel.setLayout(objectPanelLayout);
        objectPanelLayout.setHorizontalGroup(
            objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(objectPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addComponent(descriptionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addComponent(idLabel)
                        .addGap(18, 18, 18)
                        .addComponent(idText))
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(objectPanelLayout.createSequentialGroup()
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(objectPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(gps1Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(gps1Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(gps1Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, objectPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(gps1Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(objectPanelLayout.createSequentialGroup()
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gps1Label)
                                    .addComponent(propertyCheckBox))
                                .addGap(59, 59, 59)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(parcelCheckBox)
                                    .addGroup(objectPanelLayout.createSequentialGroup()
                                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGap(18, 18, 18)
                                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(gps2Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(gps2Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(gps2Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(gps2Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(gps2Label))))))
                .addGap(18, 18, 18)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(findButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(editButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(randomButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(redrawButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(heightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(optimizeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(jScrollPane3)))
        );
        objectPanelLayout.setVerticalGroup(
            objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(objectPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton)
                    .addComponent(jButton1)
                    .addComponent(heightButton))
                .addGap(9, 9, 9)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descriptionLabel)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gps2Label)
                            .addComponent(gps1Label, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(objectPanelLayout.createSequentialGroup()
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(gps1Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(gps1Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(gps1Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(gps1Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(objectPanelLayout.createSequentialGroup()
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(gps2Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(gps2Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(gps2Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(gps2Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(propertyCheckBox)
                            .addComponent(parcelCheckBox))
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(findButton)
                            .addComponent(randomButton)
                            .addComponent(saveButton))
                        .addGap(10, 10, 10)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteButton)
                            .addComponent(deleteAllButton)
                            .addComponent(jButton2))
                        .addGap(9, 9, 9)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(redrawButton)
                            .addComponent(editButton)
                            .addComponent(optimizeButton))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3))))
        );

        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane2.setViewportView(logArea);

        drawingPanel2.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout drawingPanel2Layout = new javax.swing.GroupLayout(drawingPanel2);
        drawingPanel2.setLayout(drawingPanel2Layout);
        drawingPanel2Layout.setHorizontalGroup(
            drawingPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        drawingPanel2Layout.setVerticalGroup(
            drawingPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(objectPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawingPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(objectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(drawingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(drawingPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        T data = this.getData();
        if (propertyCheckBox.isSelected()) {
            Property property = (Property) data;
            quadTreeProperty.add(property);
            drawQuadTreeProperty();
            property.getListOfParcels().addAll(quadTreeParcel.find(property.getPosition1().getX(), property.getPosition1().getY(), property.getPosition2().getX(), property.getPosition2().getY()));
        }
        if (parcelCheckBox.isSelected()) {
            Parcel parcel = (Parcel) data;
            quadTreeParcel.add(parcel);
            drawQuadTreeParcel();
            parcel.getListOfProperties().addAll(quadTreeProperty.find(parcel.getPosition1().getX(), parcel.getPosition1().getY(), parcel.getPosition2().getX(), parcel.getPosition2().getY()));
        }
        //logArea.setText(data.toString() + " uspesne pridana");

    }//GEN-LAST:event_addButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        ArrayList<T> objects1 = new ArrayList<>();
        ArrayList<T> objects2 = new ArrayList<>();
        GuiComponent cmp;
        int i = 0;
        double x1 = Double.parseDouble(gps1Text2.getText());
        double y1 = Double.parseDouble(gps1Text4.getText());
        if (!gps2Text2.getText().isEmpty() || !gps2Text4.getText().isEmpty()) {
            double x2 = Double.parseDouble(gps2Text2.getText());
            double y2 = Double.parseDouble(gps2Text4.getText());
            if (propertyCheckBox.isSelected()) {
                objects1 = (ArrayList<T>) quadTreeProperty.find(x1,y1,x2,y2);
                cmp = new GuiComponent((int)x1, (int)y1, (int)x2, (int)y2,this.g2dProperty, Color.BLUE, "");
                drawingPanel2.add(cmp);
                drawingPanel2.paintAll(g2dProperty);
            }
            if (parcelCheckBox.isSelected()) {
                objects2 = (ArrayList<T>) quadTreeParcel.find(x1,y1,x2,y2);
                cmp = new GuiComponent((int)x1, (int)y1, (int)x2, (int)y2,this.g2dParcel, Color.BLUE, "");
                drawingPanel.add(cmp);
                drawingPanel.paintAll(g2dParcel);
            }
        } else {
            if (propertyCheckBox.isSelected()) {
                objects1 = (ArrayList<T>) quadTreeProperty.find(x1,y1);
                cmp = new GuiComponent((int)x1 - 2, (int)y1 - 2, (int)x1 + 2, (int)y1 + 2,this.g2dProperty, Color.RED, "");
                drawingPanel2.add(cmp);
                drawingPanel2.paintAll(g2dProperty);
            }
            if (parcelCheckBox.isSelected()) {
                objects2 = (ArrayList<T>) quadTreeParcel.find(x1,y1);
                cmp = new GuiComponent((int)x1 - 2, (int)y1 - 2, (int)x1 + 2, (int)y1 + 2,this.g2dParcel, Color.RED, "");
                drawingPanel.add(cmp);
                drawingPanel.paintAll(g2dParcel);
            }
        }
        listModel.clear();
        for (T o : objects1) {
            listModel.add(i, o);
            i++;
        }
        for (T o : objects2) {
            listModel.add(i, o);
            i++;
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        T data = (T) objectList.getSelectedValue();
        if (data != null){
            if (data.getClass() == Property.class) {
                quadTreeProperty.delete((Property) data);
                drawQuadTreeProperty();
            }
            if (data.getClass() == Parcel.class) {
                quadTreeParcel.delete((Parcel) data);
                drawQuadTreeParcel();
            }
        }
        //logArea.setText(data.toString() + " uspesne vymazana");
        listModel.clear();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void redrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redrawButtonActionPerformed
        if (propertyCheckBox.isSelected()) {
            drawQuadTreeProperty();
        }
        if (parcelCheckBox.isSelected()) {
            drawQuadTreeParcel();
        }
    }//GEN-LAST:event_redrawButtonActionPerformed

    private void deleteAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllButtonActionPerformed
        if (propertyCheckBox.isSelected()) {
            generatorProperty.deleteObjects();
            drawQuadTreeProperty();
        }
        if (parcelCheckBox.isSelected()) {
            generatorParcel.deleteObjects();
            drawQuadTreeParcel();
        }
    }//GEN-LAST:event_deleteAllButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int id = Integer.parseInt(idText.getText());
        if (propertyCheckBox.isSelected()) {
            generatorProperty.insertObjects(id);
            drawQuadTreeProperty();
        }
        if (parcelCheckBox.isSelected()) {
            generatorParcel.insertObjects(id);
            drawQuadTreeParcel();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomButtonActionPerformed
        if (propertyCheckBox.isSelected()) {
            generatorProperty.random();
            drawQuadTreeProperty();
        }
        if (parcelCheckBox.isSelected()) {
            generatorParcel.random();
            drawQuadTreeParcel();
        }
    }//GEN-LAST:event_randomButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        T data = (T) objectList.getSelectedValue();
        if ( data != null) {
            T newObject = this.getData();
            if (data.getClass() == Property.class && newObject.getClass() == Property.class) {
                quadTreeProperty.edit((Property) data, (Property) newObject);
                drawQuadTreeProperty();
            }
            if (data.getClass() == Parcel.class && newObject.getClass() == Parcel.class) {
                quadTreeParcel.edit((Parcel) data, (Parcel) newObject);
                drawQuadTreeParcel();
            }
        }
        listModel.clear();
    }//GEN-LAST:event_editButtonActionPerformed

    private void objectListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_objectListValueChanged
        T data = (T) objectList.getSelectedValue();
        if ( data != null) {
            idText.setText(String.valueOf(data.getId()));
            descriptionText.setText(data.getDescription());
            gps1Text1.setText(String.valueOf(data.getPosition1().getWidth()));
            gps1Text2.setText(String.valueOf(data.getPosition1().getX()));
            gps1Text3.setText(String.valueOf(data.getPosition1().getHeight()));
            gps1Text4.setText(String.valueOf(data.getPosition1().getY()));

            gps2Text1.setText(String.valueOf(data.getPosition2().getWidth()));
            gps2Text2.setText(String.valueOf(data.getPosition2().getX()));
            gps2Text3.setText(String.valueOf(data.getPosition2().getHeight()));
            gps2Text4.setText(String.valueOf(data.getPosition2().getY()));
            if (data.getClass() == Property.class) {
                propertyCheckBox.setSelected(true);
                parcelCheckBox.setSelected(false);
            } else {
                propertyCheckBox.setSelected(false);
                parcelCheckBox.setSelected(true);
            }
        }
    }//GEN-LAST:event_objectListValueChanged

    private void heightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightButtonActionPerformed
        int id = Integer.parseInt(idText.getText());
        if (propertyCheckBox.isSelected()) {
            quadTreeProperty.changeQuardTreeHieght(id);
            drawQuadTreeProperty();
        }
        if (parcelCheckBox.isSelected()) {
            quadTreeParcel.changeQuardTreeHieght(id);
            drawQuadTreeParcel();
        }
    }//GEN-LAST:event_heightButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int userSelection = fileChooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            java.io.File fileToSave = fileChooser.getSelectedFile();
            if (propertyCheckBox.isSelected()) {
                quadTreeProperty.save(fileToSave.getAbsolutePath());
            }
            if (parcelCheckBox.isSelected()) {
                quadTreeParcel.save(fileToSave.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int userSelection = fileChooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            java.io.File fileToSave = fileChooser.getSelectedFile();
            if (propertyCheckBox.isSelected()) {
                quadTreeProperty.load(fileToSave.getAbsolutePath());
                drawQuadTreeProperty();
            }
            if (parcelCheckBox.isSelected()) {
                quadTreeParcel.load(fileToSave.getAbsolutePath());
                drawQuadTreeParcel();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void propertyCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_propertyCheckBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            logArea.setText("");
            for (String string : quadTreeProperty.checkTree()) {
                logArea.append(string + "\n");
            }
        }
    }//GEN-LAST:event_propertyCheckBoxItemStateChanged

    private void parcelCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_parcelCheckBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            logArea.setText("");
            for (String string : quadTreeParcel.checkTree()) {
                logArea.append(string + "\n");
            }
        }
    }//GEN-LAST:event_parcelCheckBoxItemStateChanged

    private void optimizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optimizeButtonActionPerformed
        if (propertyCheckBox.isSelected()) {
            quadTreeProperty.optimize(quadTreeProperty.findFullNode());
            drawQuadTreeProperty();
            logArea.append("Zdravie optimalizovaneho stromu je: " + quadTreeProperty.checkHealthOfTree2());
        }
        if (parcelCheckBox.isSelected()) {
            quadTreeParcel.optimize(quadTreeParcel.findFullNode());
            drawQuadTreeParcel();
            logArea.append("Zdravie optimalizovaneho stromu je: " + quadTreeParcel.checkHealthOfTree2());
        }
    }//GEN-LAST:event_optimizeButtonActionPerformed

    public T getData() {
        try {
            if (propertyCheckBox.isSelected()) {
                double x1 = Double.parseDouble(gps1Text2.getText());
                double y1 = Double.parseDouble(gps1Text4.getText());
                double x2 = Double.parseDouble(gps2Text2.getText());
                double y2 = Double.parseDouble(gps2Text4.getText());
                GPS gps1 = new GPS('X', x1, 'X', y1);
                GPS gps2 = new GPS('X', x2, 'X', y2);
                int id = Integer.parseInt(idText.getText());
                Property property = new Property((int) id, descriptionText.getText(), gps1, gps2);
                return (T) property;
            }
            if (parcelCheckBox.isSelected()) {
                double x1 = Double.parseDouble(gps1Text2.getText());
                double y1 = Double.parseDouble(gps1Text4.getText());
                double x2 = Double.parseDouble(gps2Text2.getText());
                double y2 = Double.parseDouble(gps2Text4.getText());
                GPS gps1 = new GPS('X', x1, 'X', y1);
                GPS gps2 = new GPS('X', x2, 'X', y2);
                int id = Integer.parseInt(idText.getText());
                Parcel parcel = new Parcel((int) id, descriptionText.getText(), gps1, gps2);
                return (T) parcel;
            }
        } catch (Exception e) {
            System.out.println(e);
            return null;
        }
        logArea.setText("Je potrebne vybrat typ objektu");
        return null;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteAllButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextArea descriptionText;
    private javax.swing.JPanel drawingPanel;
    private javax.swing.JPanel drawingPanel2;
    private javax.swing.JButton editButton;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel gps1Label;
    private javax.swing.JTextField gps1Text1;
    private javax.swing.JTextField gps1Text2;
    private javax.swing.JTextField gps1Text3;
    private javax.swing.JTextField gps1Text4;
    private javax.swing.JLabel gps2Label;
    private javax.swing.JTextField gps2Text1;
    private javax.swing.JTextField gps2Text2;
    private javax.swing.JTextField gps2Text3;
    private javax.swing.JTextField gps2Text4;
    private javax.swing.JButton heightButton;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea logArea;
    private javax.swing.JList<QuadTreeObject> objectList;
    private javax.swing.JPanel objectPanel;
    private javax.swing.JButton optimizeButton;
    private javax.swing.JCheckBox parcelCheckBox;
    private javax.swing.JCheckBox propertyCheckBox;
    private javax.swing.JButton randomButton;
    private javax.swing.JButton redrawButton;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
